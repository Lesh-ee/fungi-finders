/* 
this order of importance isn't strictly necessary
as it will match the order in which the layers in the code are placed
but this helps keep track of all of them and feels like good reassurance 
*/
@layer reset, base, custom-properties;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }

  body,
  h1,
  h2,
  h3,
  h4,
  p,
  figure,
  blockquote,
  dl,
  dd {
    margin: 0;
  }

  [role="list"] {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  body {
    min-block-size: 100vh;
    line-height: 1.6;
  }

  h1,
  h2,
  h3,
  button,
  input,
  label {
    line-height: 1.1;
  }

  h1,
  h2,
  h3,
  h4 {
    text-wrap: balance;
  }

  h1 {
    font-size: 3rem;
  }

  p,
  li {
    text-wrap: pretty;
  }

  img,
  picture {
    max-inline-size: 100%;
    display: block;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
  }
}

@layer base {
}

@layer custom-properties {
  :root {
    /*
    the hundreds are to denote brightness
    500 being the middle option
    this allows equal variance either direction
    also if a new color is added between say 400 and 500
    I can just slot it in as color-450
    */

    --clr-white: hsl(0, 0%, 100%);
    --clr-gray-100: hsl(0, 2%, 79%);
    --clr-brand-400: hsl(25, 88%, 75%);
    --clr-brand-500: hsl(25, 88%, 66%);
    --clr-green-400: hsl(143, 19%, 49%);
    --clr-green-500: hsl(143, 38%, 37%);
    --clr-green-600: hsl(145, 29%, 19%);
    --clr-brown-500: hsl(10, 5%, 25%);
    --clr-brown-600: hsl(9, 7%, 21%);
    --clr-brown-700: hsl(9, 8%, 16%);
    --clr-brown-800: hsl(0, 6%, 15%);
    --clr-brown-900: hsl(0, 6%, 13%);

    --clr-orange-500: hsl(28, 43%, 28%);
    --clr-red-500: hsl(359, 34%, 24%);
    --clr-teal-500: hsl(186, 42%, 25%);

    --ff-body: "Fira Sans", sans-serif;
    --ff-heading: "Outfit", sans-serif;

    /*
    the hundreds here are a similar concept to the colors
    but determine size instead of brightness
    however the default font size i.e. body text is 400
    this is because while there may be several fonts larger than body text
    there usually arent too many smaller
    worst case scenario, thats what 50's are for

    why are fs 900 and 1000 the same rem?
    because if the screen is small, you probably dont need utterly massive text
    but we'll be using the same fs-1000 attribute for certain texts
    regardless of whether the screen is wide or thin
    */

    --fs-300: 0.875rem;
    --fs-400: 1rem;
    --fs-500: 1.125rem;
    --fs-600: 1.25rem;
    --fs-700: 1.5rem;
    --fs-800: 2rem;
    --fs-900: 3.75rem;
    --fs-1000: 3.75rem;

    --br-100: 0.25rem;
    --br-200: 0.5rem;
    --br-300: 0.75rem;

    /*
    these are the new values for if the screens are wide enough
    300 and 400 aren't being changed so no need to mention them here
    */
    @media (width > 760px) {
      --fs-500: 1.25rem;
      --fs-600: 1.5rem;
      --fs-700: 2rem;
      --fs-800: 3rem;
      --fs-900: 5rem;
      --fs-1000: 7.5rem;
    }
  }

  /*
  this second root isnt strictly necessary
  but for some reason vscode screws up highlighting for code after an @media
  so this is just to make all the text look pretty and colored
  which is of course 100% essential to core functionality

  the purpose of this chunk is to seperate my references in code and primitives
  this  way if normal text needs to be a new color
  but I still need the old color for something else
  I dont have to go to every instance of my normal text and change it
  */
  :root {
    --text-main: var(--clr-gray-100);
    --text-high-contrast: var(--clr-white);
    --text-brand: var(--clr-brand-500);
    --text-brand-light: var(--clr-brand-400);

    --background-accent-light: var(--clr-green-400);
    --background-accent-main: var(--clr-green-500);
    --background-accent-dark: var(--clr-green-600);

    --background-extra-light: var(--clr-brown-500);
    --background-light: var(--clr-brown-600);
    --background-main: var(--clr-brown-700);
    --background-dark: var(--clr-brown-800);
    --background-extra-dark: var(--clr-brown-900);

    --font-size-heading-sm: var(--fs-700);
    --font-size-heading-rg: var(--fs-800);
    --font-size-heading-lg: var(--fs-900);
    --font-size-heading-xl: var(--fs-1000);

    --font-size-sm: var(--fs-300);
    --font-size-regular: var(--fs-400);
    --font-size-md: var(--fs-500);
    --font-size-lg: var(--fs-600);

    --border-radius-sm: var(--br-100);
    --border-radius-md: var(--br-200);
    --border-radius-lg: var(--br-300);
  }

  html {
    font-family: var(--ff-body);
    line-height: 1.6;
  }

  body {
    font-size: var(--font-size-heading-rg);
    color: var(--text-main);
    background-color: var(--background-main);
  }

  h1,
  h2,
  h3,
  h4 {
    font-family: var(--ff-heading);
    color: var(--text-high-contrast);
  }

  h1 {
    font-size: var(--font-size-heading-lg);
  }

  a {
    color: var(--text-high-contrast);
  }

  /*
  the difference between focus and focus-visible is buttons
  with focus, its effect will always be applied once you've clicked the button
  with focus-visible, its effect only occers as a hover or when tab selected

  no difference for a's, but still good to use f-v for hand memory
  */
  a:hover,
  a:focus-visible {
    color: var(--text-brand-light);
  }
}
